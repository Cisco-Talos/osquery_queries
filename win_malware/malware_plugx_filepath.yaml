PlugX File Artifact:
  query: SELECT f.path, f.filename, h.sha256, f.uid, f.gid, f.mode, f.size, 
    DATETIME(f.atime, 'unixepoch', 'UTC') AS last_access_time, 
    DATETIME(f.mtime, 'unixepoch', 'UTC') AS last_modified, 
    DATETIME(f.ctime, 'unixepoch', 'UTC') AS last_status_change_time, 
    DATETIME(f.btime, 'unixepoch', 'UTC') AS creation_time, f.type 
    FROM file f LEFT JOIN hash h ON f.path = h.path 
    WHERE (f.path LIKE '\Users\%\AppData\Local\Temp\%%' 
    AND (f.filename LIKE 'acrobat.dll' 
    OR f.filename LIKE 'acrobat.dxe')) 
    OR (f.path LIKE '\Users\%\AppData\Local\Temp\%\ddos\%%' 
    AND (f.filename LIKE 'FVTProect32.sys' 
    OR f.filename LIKE 'FVTProect64.sys'));
  interval: 86400
  snapshot: true
  description: PlugX exploits vulnerable legitimate binaries, such as Acrobat.exe, to initiate its loader. 
    It's also known for using a technique to sideload dynamic link libraries (DLL), which involves 
    placing a malicious DLL, with the same name as a legitimate one, in the same directory from 
    which an application is loaded to take advantage of the DLL search order. 
  references:
  - 046a03725df3104d02fa33c22e919cc73bed6fd6a905098e98c07f0f1b67fadb
  mitre_tactics:
  - Privilege Escalation: TA0004
  - Defense Evasion: TA0005
  mitre_techniques:
  - Dynamic-link Library Injection: T1055.001
  - Match Legitimate Name or Location: T1036.005
  platform:
  - windows
